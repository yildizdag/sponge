!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! LINEAR BUCKLING ANALYSIS
!! BIOMIMETIC DESIGN BASED ON
!! EUPLECTELLA ASPERGILLUM
!! CIRC and LONG PRESSURE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
/PREP7
!!!!!!!!!!!!!!!!
!  PARAMETERS
!!!!!!!!!!!!!!!!
R=12.6051E-3
H=60E-3
NV=40
NC=37
D_SHELIX=0.97804E-3
AA=0.19453E-3
BB=0.19376E-3
LOOP_NO = 4
PITCH=H/LOOP_NO
PI = 3.1415927
DELTA_TH = 2*PI/NV
DELTA_H = H/(NC-1)
TH_SHELIX = D_SHELIX/R
NOBUCK = 10
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!  CROSS SECTION OF THE BIG HELIX
!!  AT THE END SECTION IS SAVED AND
!!  UNNECESSARY DATA IS DELETED
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ET,1,PLANE82
LOCAL,11,1,,,,,,,2
CSYS,11
RR = 1.2269E-3
COUNT = 1
*DO,TH,0.0,180.0,180/12.0
K,COUNT,RR,TH,0
COUNT = COUNT + 1
*ENDDO
FLST,3,13,3
SPLINE_COUNT = 1
*DO,I,1,13
FITEM,3,SPLINE_COUNT
SPLINE_COUNT = SPLINE_COUNT + 1
*ENDDO
BSPLIN,,P51X
CSYS,0																
L,1,13
LESIZE,ALL, , ,40, ,1, , ,1,
AL,1,2
AMESH,ALL
ESEL,ALL
SECWRITE,big_helix
ACLEAR,ALL
ADELE,ALL,,,1
!!!!!!!!!!!!!!!!!!!!!!
!!  MAIN CODE STARTS
!!!!!!!!!!!!!!!!!!!!!!
ET,1,BEAM188				!ELEMENT TYPE
MPTEMP,,,,,,,,
MPTEMP,1,0
MPDATA,EX,1,,91900000000
MPDATA,PRXY,1,,0.17
SECTYPE,1,BEAM,RECT,,0			!RECTANGULAR SECTION
SECOFFSET,CENT
SECDATA,AA,BB,0,0,0,0,0,0,0,0,0,0
SECTYPE,2,BEAM,MESH,			!ELLIPSOIDAL SECTION
SECOFFSET,ORIG,,,   
SECREAD,'big_helix','SECT',' ',MESH 
!!!!!!!!!!!!!!!!!!!!!!
!!  VERTICAL BEAMS
!!!!!!!!!!!!!!!!!!!!!!
COUNT=1
TH=0
*DO,II,1,NV
K,COUNT,R*COS(TH),R*SIN(TH),0
TH = TH + DELTA_TH
COUNT = COUNT + 1
*ENDDO
TH=0
*DO,II,1,NV
K,COUNT,R*COS(TH),R*SIN(TH),H
TH = TH + DELTA_TH
COUNT = COUNT + 1
*ENDDO
!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!  CIRCUMFERENTIAL BEAMS
!!!!!!!!!!!!!!!!!!!!!!!!!!!
COUNT_LINE=1
*DO,II,1,NV
L,COUNT_LINE,COUNT_LINE+NV
COUNT_LINE = COUNT_LINE + 1
*ENDDO
HH=0
*DO,II,1,NC
K,COUNT,0,0,HH
CIRCLE,COUNT,R
COUNT = COUNT + 5
COUNT_LINE = COUNT_LINE + 4
HH = HH + DELTA_H
*ENDDO
!!!!!!!!!!!!!!!!!!!!!
!!  SMALL HELICES
!!!!!!!!!!!!!!!!!!!!!
TH0 = TH_SHELIX/2
TH1 = -TH_SHELIX/2
HH=0

*DO,JJ,1,NV/2
SPLINE_INIT = COUNT
HH=0

*DO,II,1,NC
K,COUNT,R*COS(TH0),R*SIN(TH0),HH
COUNT = COUNT + 1
TH0 = TH0 + DELTA_TH
HH = HH + DELTA_H 
*ENDDO
FLST,3,NC,3

*DO,II,1,NC
FITEM,3,SPLINE_INIT
SPLINE_INIT = SPLINE_INIT + 1
*ENDDO
BSPLIN,,P51X

COUNT_LINE = COUNT_LINE + 1
SPLINE_INIT = COUNT
HH=0
*DO,II,1,NC
K,COUNT,R*COS(TH1),R*SIN(TH1),HH
COUNT = COUNT + 1
TH1 = TH1 + DELTA_TH
HH = HH + DELTA_H
*ENDDO
FLST,3,NC,3

*DO,II,1,NC
FITEM,3,SPLINE_INIT
SPLINE_INIT = SPLINE_INIT + 1
*ENDDO
BSPLIN,,P51X

COUNT_LINE = COUNT_LINE + 1
TH0 = TH_SHELIX/2+(2*DELTA_TH)*JJ
TH1 = -TH_SHELIX/2+(2*DELTA_TH)*JJ
*ENDDO

TH0 = TH_SHELIX/2
TH1 = -TH_SHELIX/2
HH=0

*DO,JJ,1,NV/2
SPLINE_INIT = COUNT
HH=0

*DO,II,1,NC
K,COUNT,R*COS(TH0),R*SIN(TH0),HH
COUNT = COUNT + 1
TH0 = TH0 - DELTA_TH
HH = HH + DELTA_H 
*ENDDO
FLST,3,NC,3

*DO,II,1,NC
FITEM,3,SPLINE_INIT
SPLINE_INIT = SPLINE_INIT + 1
*ENDDO
BSPLIN,,P51X

COUNT_LINE = COUNT_LINE + 1
SPLINE_INIT = COUNT
HH=0
*DO,II,1,NC
K,COUNT,R*COS(TH1),R*SIN(TH1),HH
COUNT = COUNT + 1
TH1 = TH1 - DELTA_TH
HH = HH + DELTA_H
*ENDDO
FLST,3,NC,3

*DO,II,1,NC
FITEM,3,SPLINE_INIT
SPLINE_INIT = SPLINE_INIT + 1
*ENDDO
BSPLIN,,P51X

COUNT_LINE = COUNT_LINE + 1
TH0 = TH_SHELIX/2+(2*DELTA_TH)*JJ
TH1 = -TH_SHELIX/2+(2*DELTA_TH)*JJ
*ENDDO

*GET,NUM_KP,KP,0,NUM,MAXD
COUNT = NUM_KP+1
HH = 0
TH0 = 0
DELTA_H_BIGHELIX = PITCH/NV
SPLINE_INIT = COUNT
*DO,II,1,(NV)*LOOP_NO+1
K,COUNT,R*COS(TH0),R*SIN(TH0),HH
TH0 = TH0 - DELTA_TH
HH = HH + DELTA_H_BIGHELIX
COUNT = COUNT + 1
*ENDDO
FLST,3,(NV)*LOOP_NO+1,3
*DO,II,1,(NV)*LOOP_NO+1
FITEM,3,SPLINE_INIT
SPLINE_INIT = SPLINE_INIT + 1
*ENDDO
BSPLIN,,P51X

LSEL,ALL
BTOL,1E-10
LOVLAP,ALL

HELIX_TAN = H/(LOOP_NO*2*PI*R)

*GET,L_NUM1,LINE,0,NUM,MIND
*GET,L_NUM2,LINE,0,NUM,MAXD

*GET,NUM_KP,KP,0,NUM,MAXD
COUNT = NUM_KP+1

*DO,II,L_NUM1,L_NUM2

*GET,LKP1,LINE,II,KP,1
*GET,KP1X,KP,LKP1,LOC,X
*GET,KP1Y,KP,LKP1,LOC,Y
*GET,KP1Z,KP,LKP1,LOC,Z

*GET,LKP2,LINE,II,KP,2
*GET,KP2X,KP,LKP2,LOC,X
*GET,KP2Y,KP,LKP2,LOC,Y
*GET,KP2Z,KP,LKP2,LOC,Z

X_COMP = KP2X-KP1X
Y_COMP = KP2Y-KP1Y
Z_COMP = KP2Z-KP1Z

XY_DIST = SQRT(X_COMP**2+Y_COMP**2)
Z_DIST = ABS(Z_COMP)
*IF,XY_DIST,LT,1E-6,THEN
L_TAN = 0
*ELSE
L_TAN = Z_DIST/XY_DIST
*ENDIF
TAN_MIN = HELIX_TAN-0.01
TAN_MAX = HELIX_TAN+0.01
*IF,L_TAN,GT,TAN_MIN,AND,L_TAN,LT,TAN_MAX,THEN
*GET,kpoint,LINE,II,KP,1
*GET,kpx,KP,kpoint,LOC,X
*GET,kpy,KP,kpoint,LOC,Y
*GET,kpz,KP,kpoint,LOC,Z
K,COUNT,2*kpx,2*kpy,kpz
LSEL,,,,II
LATT,1,,1,,COUNT,,2
*ELSE
*GET,kpoint,LINE,II,KP,1
*GET,kpx,KP,kpoint,LOC,X
*GET,kpy,KP,kpoint,LOC,Y
*GET,kpz,KP,kpoint,LOC,Z
K,COUNT,2*kpx,2*kpy,kpz
LSEL,,,,II
LATT,1,,1,,COUNT,,1
*ENDIF
COUNT = COUNT+1
*ENDDO

LSEL,ALL
LMESH,ALL

CSYS,1
SELTOL,1E-8
NSEL,S,LOC,Z,0,0
NSEL,R,LOC,X,R,R
D,ALL,UX,0
D,ALL,UY,0
D,ALL,UZ,0
D,ALL,ROTX,0
D,ALL,ROTY,0
D,ALL,ROTZ,0
NSEL,S,LOC,Z,H,H
NSEL,R,LOC,X,R,R
F,ALL,FZ,-1
ALLSEL,ALL
CSYS,0
SFBEAM,ALL,1,PRES,1,,,,,,0

FINISH  
/SOLU   
ANTYPE,0 
NLGEOM,0
NROPT,AUTO, ,   
LUMPM,0 
EQSLV, , ,0, ,DELE  
MSAVE,0 
PCGOPT,0, ,AUTO, , ,AUTO
PIVCHECK,0  
PSTRESS,1   
TOFFST,0,   
/STATUS,SOLU
SOLVE
FINISH
/SOLUTION   
ANTYPE,1
FINISH  
/PREP7  
FINISH  
/SOL
BUCOPT,LANB,NOBUCK,0,0,CENTER
MXPAND,NOBUCK,0,0,1,0.001,   
/STATUS,SOLU
SOLVE   
FINISH
/POST1
*GET,CRITICAL_LOAD,ACTIVE,0,SET,TIME
ETABLE,,VOLU,,
SSUM
*GET,TOTVOL,SSUM,0,ITEM,VOLU
COST = TOTVOL/CRITICAL_LOAD